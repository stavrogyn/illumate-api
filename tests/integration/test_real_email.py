#!/usr/bin/env python3
"""
Integration test for real email sending via AWS SES
"""

import os
import sys
import pytest
from app.infrastructure.external.email_service import EmailService
from app.config import settings

def test_email_sending():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–∏—Å–µ–º"""
    
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º ===\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ config
    required_vars = [
        ("AWS_REGION", settings.aws_region),
        ("AWS_ACCESS_KEY_ID", settings.aws_access_key_id), 
        ("AWS_SECRET_ACCESS_KEY", settings.aws_secret_access_key),
        ("SENDER_EMAIL", settings.sender_email)
    ]
    
    missing_vars = []
    for var_name, var_value in required_vars:
        if not var_value:
            missing_vars.append(var_name)
    
    if missing_vars:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        for var in missing_vars:
            print(f"   - {var}")
        print("\n–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º –Ω—É–∂–Ω–æ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   export AWS_REGION=eu-north-1")
        print("   export AWS_ACCESS_KEY_ID=your-access-key-id")
        print("   export AWS_SECRET_ACCESS_KEY=your-secret-access-key")
        print("   export SENDER_EMAIL=your-verified-email@example.com")
        print("\n2. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å email-–∞–¥—Ä–µ—Å–∞ –≤ AWS SES:")
        print("   - –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å (SENDER_EMAIL) - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")
        print("   - –ü–æ–ª—É—á–∞—Ç–µ–ª–∏ - –µ—Å–ª–∏ –≤ sandbox —Ä–µ–∂–∏–º–µ")
        pytest.skip("Missing AWS SES environment variables")
    
    print("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    print(f"   AWS_REGION: {settings.aws_region}")
    print(f"   SENDER_EMAIL: {settings.sender_email}")
    print(f"   AWS_ACCESS_KEY_ID: {settings.aws_access_key_id[:10]}...")
    
    # –°–æ–∑–¥–∞–µ–º email service
    email_service = EmailService()
    
    if not email_service.ses_client:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å AWS SES –∫–ª–∏–µ–Ω—Ç")
        pytest.skip("AWS SES client initialization failed")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∏—Å—å–º–∞
    print("\nüìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∏—Å—å–º–∞...")
    
    # Use a test email or skip if not provided
    test_email = os.getenv("TEST_EMAIL")
    if not test_email:
        print("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ (TEST_EMAIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
        print("–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: export TEST_EMAIL=your-test-email@example.com")
        pytest.skip("TEST_EMAIL environment variable not set")
    
    success = email_service.send_email(
        to_email=test_email,
        subject="–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç FastAPI Auth System",
        body_text="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã AWS SES.",
        body_html="<h1>–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ</h1><p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã AWS SES.</p>"
    )
    
    if success:
        print("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        assert True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞")
        assert False

def show_aws_ses_setup_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ AWS SES"""
    
    print("\n" + "="*60)
    print("–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï AWS SES")
    print("="*60)
    
    print("\n1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç AWS –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SES")
    print("2. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, eu-north-1)")
    print("3. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:")
    print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'Verified identities'")
    print("   - –ù–∞–∂–º–∏—Ç–µ 'Create identity'")
    print("   - –í—ã–±–µ—Ä–∏—Ç–µ 'Email address'")
    print("   - –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email")
    print("   - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email —á–µ—Ä–µ–∑ –ø–∏—Å—å–º–æ –æ—Ç AWS")
    
    print("\n4. –°–æ–∑–¥–∞–π—Ç–µ IAM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏ SES:")
    print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ IAM")
    print("   - –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("   - –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –ø–æ–ª–∏—Ç–∏–∫—É 'AmazonSESFullAccess'")
    print("   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ Access Key ID –∏ Secret Access Key")
    
    print("\n5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("   export AWS_REGION=eu-north-1")
    print("   export AWS_ACCESS_KEY_ID=your-access-key-id")
    print("   export AWS_SECRET_ACCESS_KEY=your-secret-access-key")
    print("   export SENDER_EMAIL=your-verified-email@example.com")
    
    print("\n6. –ï—Å–ª–∏ –≤—ã –≤ sandbox —Ä–µ–∂–∏–º–µ:")
    print("   - –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –≤—Å–µ email-–∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
    print("   - –ò–ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –≤—ã—Ö–æ–¥ –∏–∑ sandbox —Ä–µ–∂–∏–º–∞")
    
    print("\n7. –î–ª—è production:")
    print("   - –ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤")
    print("   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DKIM –¥–ª—è –¥–æ–º–µ–Ω–∞")
    print("   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å (bounce/complaint handling)")

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "--help":
        show_aws_ses_setup_instructions()
    else:
        # This allows running the file directly for manual testing
        test_email_sending()
        show_aws_ses_setup_instructions() 
